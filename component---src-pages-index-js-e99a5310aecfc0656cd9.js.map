{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/SEO.js","webpack:///./src/pages/index.module.css"],"names":["IMG","react_default","a","createElement","src","className","styles","bg","console","log","IndexPage","SEO","title","keywords","style","margin","maxWidth","Image","query","_ref","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","render","data","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","module","exports"],"mappings":"+JAWMA,EAAMC,EAAAC,EAAAC,cAAA,OAAKC,IAAI,oBAAoBC,UAAWC,IAAOC,KAE3DC,QAAQC,IAAIT,GAcGU,UAZG,kBAChBT,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAKC,MAAM,OAAOC,SAAU,CAAC,SAAU,cAAe,WACtDZ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAOS,MAAO,CAAEC,OAAQ,YAAaC,SAAU,MAC5Df,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,gDACAF,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAUC,MAAO,qBAChBlB,6GCjBP,SAASW,EAATQ,GAA2D,IAA5CC,EAA4CD,EAA5CC,YAAaC,EAA+BF,EAA/BE,KAAMC,EAAyBH,EAAzBG,KAAMT,EAAmBM,EAAnBN,SAAUD,EAASO,EAATP,MAChD,OACEW,EAAArB,EAAAC,cAACqB,EAAA,YAAD,CACEN,MAAOO,EACPC,OAAQ,SAAAC,GACN,IAAMC,EACJR,GAAeO,EAAKE,KAAKC,aAAaV,YACxC,OACEG,EAAArB,EAAAC,cAAC4B,EAAA7B,EAAD,CACE8B,eAAgB,CACdX,QAEFT,MAAOA,EACPqB,cAAa,QAAUN,EAAKE,KAAKC,aAAalB,MAC9CU,KAAM,CACJ,CACEY,KAAM,cACNC,QAASP,GAEX,CACEQ,SAAU,WACVD,QAASvB,GAEX,CACEwB,SAAU,iBACVD,QAASP,GAEX,CACEQ,SAAU,UACVD,QAAS,WAEX,CACED,KAAM,eACNC,QAAS,WAEX,CACED,KAAM,kBACNC,QAASR,EAAKE,KAAKC,aAAaO,QAElC,CACEH,KAAM,gBACNC,QAASvB,GAEX,CACEsB,KAAM,sBACNC,QAASP,IAGVU,OACCzB,EAAS0B,OAAS,EACd,CACEL,KAAM,WACNC,QAAStB,EAAS2B,KAAK,OAEzB,IAELF,OAAOhB,MAtDlBK,KAAAc,IA8DJ9B,EAAI+B,aAAe,CACjBrB,KAAM,KACNC,KAAM,GACNT,SAAU,IAGZF,EAAIgC,UAAY,CACdvB,YAAawB,IAAUC,OACvBxB,KAAMuB,IAAUC,OAChBvB,KAAMsB,IAAUE,MAChBjC,SAAU+B,IAAUG,QAAQH,IAAUC,QACtCjC,MAAOgC,IAAUC,OAAOG,YAGXrC,MAEf,IAAMc,EAAY,0OCpFlBwB,EAAAC,QAAA,CAAkB3C,GAAA","file":"component---src-pages-index-js-e99a5310aecfc0656cd9.js","sourcesContent":["// main imports\nimport React from 'react'\nimport { Link } from 'gatsby'\n\nimport styles from './index.module.css'\n\n// components\nimport Image, { UIImages } from '../components/Image'\nimport SEO from '../components/SEO'\nimport DataGenerator from '../components/DataGenerator'\n\nconst IMG = <img src=\"./clothes-sml.jpg\" className={styles.bg} />\n\nconsole.log(IMG)\n\nconst IndexPage = () => (\n  <div>\n    <SEO title=\"Home\" keywords={['gatsby', 'application', 'react']} />\n    <div className=\"page\" style={{ margin: '3rem auto', maxWidth: 600 }}>\n      <h2>this is the home page</h2>\n      <h4>Interactive product discovery here</h4>\n      <UIImages query={'pablo-logged-out'} />\n      {IMG}\n    </div>\n  </div>\n)\n\nexport default IndexPage\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:title',\n                content: title,\n              },\n              {\n                property: 'og:description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:type',\n                content: 'website',\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                name: 'twitter:creator',\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: 'twitter:title',\n                content: title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: 'keywords',\n                      content: keywords.join(', '),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"index-module--bg--2FyiG\"};"],"sourceRoot":""}