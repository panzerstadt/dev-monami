{"version":3,"sources":["webpack:///./src/utils/shuffleSeed.js","webpack:///./src/utils/chunkArray.js","webpack:///./src/components/Hero/index.js","webpack:///./src/pages/index.js","webpack:///./src/pages/index.module.css","webpack:///./src/components/Hero/index.module.css"],"names":["shuffleSeed","require","chunkArray","list","chunk_size","results","chk","initLength","length","push","splice","console","log","RandomGallery","_ref","data","_ref$cols","cols","_ref$imgWidth","imgWidth","leftPad","_ref$padding","padding","left","top","_ref$random","spaceBetween","random","seed","_useState","useState","outputChunks","setOutputChunks","_useState2","Math","seedState","windowSize","useWindowSize","mousePos","useMousePos","imgList","products","shuffle","galleryProducts","posChunks","floor","slice","chunkToUse","prodChunks","out","map","v","i","temp","w","j","apply","assignProductsToList","paddingOut","l","t","remap","width","calculatePadding","posList","chunk","padFirstLeft","padFirstTop","output","react_default","a","createElement","key","className","styles","imgs","hoverable","style","hoverProduct","position","x","y","height","objectFit","src","file","alt","gatsby_image_default","fluid","node","url","gallery","PanningTableHero","_ref2","amount","speed","_useState3","imgState","setImgState","Hero_RandomGallery","gatsby_browser_entry","query","render","heroImages","edges","concat","_4174094138","bg","IndexPage","SEO","title","keywords","Hero","module","exports"],"mappings":"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","file":"component---src-pages-index-js-3122158f7ebe45b3c1bb.js","sourcesContent":["import seedrandom from 'seedrandom'\n\n// https://github.com/webcaetano/shuffle-seed\n\nconst shuffleSeedLOCAL = () => {\n  let self = {}\n\n  if (Math.seedrandom) seedrandom = Math.seedrandom\n\n  let seedify = seed => {\n    if (\n      /(number|string)/i.test(\n        Object.prototype.toString.call(seed).match(/^\\[object (.*)\\]$/)[1]\n      )\n    )\n      return seed\n\n    if (isNaN(seed))\n      return Number(String((this.strSeed = seed)))\n        .split('')\n        .map(x => x.charCodeAt(0))\n\n    return seed\n  }\n\n  let seedRand = (func, min, max) => {\n    return Math.floor(func() * (max - min + 1)) + min\n  }\n\n  self.shuffle = (arr, seed) => {\n    if (!Array(arr).isArray()) return null\n    seed = seedify(seed) || 'none'\n\n    let size = arr.length\n    let rng = seedrandom(seed)\n    let resp = []\n    let keys = []\n\n    for (var i = 0; i < size; i++) keys.push(i)\n    for (var i = 0; i < size; i++) {\n      var r = seedRand(rng, 0, keys.length - 1)\n      var g = keys[r]\n      keys.splice(r, 1)\n      resp.push(arr[g])\n    }\n    return resp\n  }\n\n  self.unshuffle = function(arr, seed) {\n    if (!Array(arr).isArray()) return null\n    seed = seedify(seed) || 'none'\n\n    var size = arr.length\n    var rng = seedrandom(seed)\n    var resp = []\n    var map = []\n    var keys = []\n\n    for (var i = 0; i < size; i++) {\n      resp.push(null)\n      keys.push(i)\n    }\n\n    for (var i = 0; i < size; i++) {\n      var r = seedRand(rng, 0, keys.length - 1)\n      var g = keys[r]\n      keys.splice(r, 1)\n      resp[g] = arr[i]\n    }\n\n    return resp\n  }\n}\n\nexport const shuffle = a => {\n  var j, x, i\n  for (i = a.length - 1; i > 0; i--) {\n    j = Math.floor(Math.random() * (i + 1))\n    x = a[i]\n    a[i] = a[j]\n    a[j] = x\n  }\n  return a\n}\n\nexport const shuffleSeed = require('shuffle-seed')\n","const chunkArray = (list, chunk_size) => {\n  let results = []\n  let chk = 0\n  let initLength = list.length\n\n  while (list.length) {\n    results.push(list.splice(0, chunk_size))\n    chk++\n    if (chk > 5 && list.length === initLength) {\n      console.log('this list is not being spliced properly.')\n      console.log(`list size: ${list.length}, chunk size: ${chunk_size}`)\n      console.log(list)\n      throw 'list is not being spliced, as chunk size is larger than list size'\n    }\n  }\n\n  return results\n}\n\nexport default chunkArray\n","import React, { useState, useEffect } from 'react'\nimport { graphql, StaticQuery } from 'gatsby'\nimport Img from 'gatsby-image'\n\nimport { shuffleSeed, shuffle } from '../../utils/shuffleSeed'\nimport chunkArray from '../../utils/chunkArray'\n\nimport styles from './index.module.css'\n\nimport { useWindowSize, useMousePos } from '../../utils/useHooks'\nimport { remap } from '../../utils/helpers'\nimport { galleryProducts } from '../Gallery'\n\n// some hack to make local variables keep state\nlet DUMMY_IMG = []\n\nconst calculatePadding = (windowSize, padding) => {\n  const l = padding.left\n  const t = padding.top\n\n  // only affect left for now\n  // map window size to a number between min and max padding\n  const leftOut = remap(windowSize.width, 0, 2000, l, l * 16)\n\n  return {\n    left: leftOut,\n    top: t,\n  }\n}\n\nconst assignProductsToList = (products, list) => {\n  let out = []\n\n  list.map((v, i) => {\n    let temp = []\n    v.map((w, j) => {\n      console.log()\n      if (products.length === 0) temp.push('')\n      temp.push(...products.splice(0, 1))\n    })\n    out.push(temp)\n  })\n  return out\n}\n\nconst RandomGallery = ({\n  data,\n  cols = 5,\n  imgWidth = 200,\n  leftPad,\n  padding = { left: 10, top: 50 },\n  spaceBetween = true,\n  random = true,\n  seed,\n}) => {\n  const [outputChunks, setOutputChunks] = useState([])\n  const [seedState, setSeedState] = useState(Math.random() * 10) // once per mount\n\n  const windowSize = useWindowSize()\n  const mousePos = useMousePos()\n\n  let imgList = data\n  const products = shuffleSeed.shuffle(galleryProducts(), seed || seedState)\n\n  if (random) imgList = shuffleSeed.shuffle(data, seed || seedState)\n\n  const posChunks = chunkArray(\n    imgList,\n    Math.floor(imgList.length / cols)\n  ).slice(0, cols)\n\n  // hack\n  // save to state, because window size changes break cache\n  if (outputChunks.length === 0 && posChunks.length > 0)\n    setOutputChunks(posChunks)\n  // this switches between initial dataload and saved state\n  const chunkToUse = posChunks.length > 0 ? posChunks : outputChunks\n\n  const prodChunks = assignProductsToList(products, chunkToUse)\n\n  const paddingOut = calculatePadding(windowSize, padding)\n\n  const posList = chunkToUse.map((chunk, i) => {\n    const padFirstLeft = leftPad ? paddingOut.left + i * imgWidth : i * imgWidth\n\n    return chunk.map((v, j) => {\n      const padFirstTop = paddingOut.top + j * imgWidth\n      return [\n        i === 0 ? padFirstLeft : padFirstLeft + paddingOut.left * i,\n        j === 0 ? padFirstTop : padFirstTop + paddingOut.top + j,\n      ]\n    })\n  })\n\n  const output = chunkToUse.map((chunk, i) => {\n    return chunk.map((v, j) => {\n      return (\n        <div\n          key={`${i}-${j}`}\n          className={styles.imgs + ' ' + styles.hoverable}\n          style={{\n            left: posList[i][j][0],\n            top: posList[i][j][1],\n            width: imgWidth,\n          }}\n        >\n          <img\n            className={styles.hoverProduct}\n            style={{\n              position: 'fixed',\n              left: mousePos.x,\n              top: mousePos.y,\n              height: 300,\n              width: 300,\n              objectFit: 'cover',\n            }}\n            src={prodChunks[i][j].file}\n            alt=\"product image\"\n          />\n          <Img fluid={v.node.url.fluid} />\n        </div>\n      )\n    })\n  })\n\n  return <div className={styles.gallery}>{output}</div>\n}\n\nconst PanningTableHero = ({ amount, speed, data }) => {\n  const [imgState, setImgState] = useState([])\n\n  if (data) {\n    // the non-GraphQL way, extensible\n    return <RandomGallery data={data} />\n  } else {\n    return (\n      <StaticQuery\n        query={graphql`\n          {\n            heroImages: allFile(\n              filter: {\n                sourceInstanceName: { eq: \"images\" }\n                relativeDirectory: { eq: \"boxes\" }\n                extension: { in: [\"png\", \"jpg\", \"jpeg\"] }\n              }\n            ) {\n              edges {\n                node {\n                  sourceInstanceName\n                  product: relativeDirectory\n                  name\n                  url: childImageSharp {\n                    fluid(maxWidth: 500) {\n                      ...GatsbyImageSharpFluid\n                    }\n                  }\n                }\n              }\n            }\n          }\n        `}\n        render={data => {\n          if (imgState.length === 0) {\n            // this statisquery somehow only works once, so\n            // this is a hack for saving the queried data\n            setImgState([...data.heroImages.edges])\n          }\n\n          return <RandomGallery data={imgState} cols={5} />\n        }}\n      />\n    )\n  }\n}\n\nexport default PanningTableHero\n","// main imports\nimport React, { useEffect } from 'react'\nimport { Link } from 'gatsby'\n\nimport styles from './index.module.css'\n\n// components\nimport Image, { UIImages } from '../components/Image'\nimport SEO from '../components/SEO'\nimport DataGenerator from '../components/DataGenerator'\n\nimport Hero from '../components/Hero'\n\nconst IMG = <img src=\"./clothes-sml.jpg\" className={styles.bg} />\n\nconst IndexPage = () => {\n  return (\n    <div>\n      <SEO title=\"Home\" keywords={['gatsby', 'application', 'react']} />\n      {/* <div className=\"page\" style={{ margin: '3rem auto', maxWidth: 600 }}>\n      <h2>this is the home page</h2>\n      <h4>Interactive product discovery here</h4>\n      <UIImages query={'pablo-logged-out'} />\n      {IMG}\n    </div> */}\n      <Hero />\n      <div style={{ height: '100vh' }} />\n    </div>\n  )\n}\n\nexport default IndexPage\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"index-module--bg--2FyiG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gallery\":\"index-module--gallery--2jqAS\",\"imgs\":\"index-module--imgs--GTq_Y\",\"hoverable\":\"index-module--hoverable--25jov\",\"hoverProduct\":\"index-module--hoverProduct--3Se7o\"};"],"sourceRoot":""}