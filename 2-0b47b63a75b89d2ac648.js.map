{"version":3,"sources":["webpack:///./src/components/SEO.js","webpack:///./src/components/Image.js","webpack:///./src/components/Gallery/helpers.js","webpack:///./src/components/Gallery/components/index.js","webpack:///./src/components/Gallery/index.js","webpack:///./src/components/Gallery/components/index.module.css"],"names":["SEO","_ref","description","lang","meta","keywords","title","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","render","data","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","UIImages","_ref2","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","gatsby_image__WEBPACK_IMPORTED_MODULE_4___default","fluid","edges","filter","v","i","node","url","_public_static_d_1384778449_json__WEBPACK_IMPORTED_MODULE_1__","groupByProduct","nodes","key","dirs","map","product","groups","_groups$v2","_groups$v","filterProducts","filterCriteria","objectWithoutPropertiesLoose_default","Object","assign","value","sets","edgesImg","edgesJson","imgs","jsons","keys","makeProductSets","filterProductSet","set","filterResults","getKeys","s","out","pageSet","subFilter","Price","price","left","react_default","className","styles","priceLeft","priceRight","slice","GalleryImage","img","gatsby_image_default","Descriptions","_ref3","desc","descriptionsLeft","descriptionsRight","BlockQuote","_ref4","quotes","person","txt","randomQuotes","require","rIndex","parseInt","Math","random","text","bustCount","descCount","sizeDescCount","Description","_ref5","index","descriptions","sizes","bust","waist","hip","components_BlockQuote","LeftImageRightText","_ref6","leftIndex","components_GalleryImage","components_Price","components_Descriptions","components_Description","LeftTextRightImage","_ref7","rightIndex","right","StandardGallery","_ref8","images","labels","randomFlip","_useState","useState","marginTop","setMarginTop","_useState2","flip","setFlip","marginSets","useEffect","galleryOut","style","display","alignItems","margin","components_LeftTextRightImage","components_LeftImageRightText","brand","brandTitle","googleTheme","scheme","base00","base01","base02","base03","base04","base05","base06","base07","base08","base09","base0A","base0B","base0C","base0D","base0E","base0F","ProductsQuery","Gallery","gatsby_browser_entry","prod","group","lbls","jsonData","components_StandardGallery","k","list","flexDirection","marginBottom","j","d","width","src","lib_default","theme","_727283579","module","exports","imgBlock"],"mappings":"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","file":"2-0b47b63a75b89d2ac648.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: 'description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:title',\n                content: title,\n              },\n              {\n                property: 'og:description',\n                content: metaDescription,\n              },\n              {\n                property: 'og:type',\n                content: 'website',\n              },\n              {\n                name: 'twitter:card',\n                content: 'summary',\n              },\n              {\n                name: 'twitter:creator',\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: 'twitter:title',\n                content: title,\n              },\n              {\n                name: 'twitter:description',\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: 'keywords',\n                      content: keywords.join(', '),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\n\n/*\n * This component is built using `gatsby-image` to automatically serve optimized\n * images with lazy loading and reduced file sizes. The image is loaded using a\n * `StaticQuery`, which allows us to load the image from directly within this\n * component, rather than having to pass the image data down from pages.\n *\n * For more information, see the docs:\n * - `gatsby-image`: https://gatsby.app/gatsby-image\n * - `StaticQuery`: https://gatsby.app/staticquery\n */\n\nexport const Image = ({ fluid_data }) => {\n  // fluid data is a resizeable data source written from\n  // graphql queries\n  return <Img fluid={fluid_data} />\n}\n\nexport const UIImages = ({ query }) => (\n  <StaticQuery\n    query={graphql`\n      {\n        UIImages: allFile(\n          filter: {\n            sourceInstanceName: { eq: \"images\" }\n            relativeDirectory: { eq: \"pablo\" }\n            extension: { in: [\"png\", \"jpg\", \"jpeg\"] }\n          }\n        ) {\n          edges {\n            node {\n              sourceInstanceName\n              product: relativeDirectory\n              name\n              extension\n              relativePath\n              changeTime\n              url: childImageSharp {\n                fluid(maxWidth: 600) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    `}\n    render={data => {\n      return (\n        <Img\n          fluid={\n            data.UIImages.edges.filter(\n              (v, i) =>\n                v.node.name === query || i === data.UIImages.edges.length - 1\n            )[0].node.url.fluid\n          }\n        />\n      )\n    }}\n  />\n)\n\nconst DummyImage = () => <img src=\"#\" />\n\nexport default DummyImage\n","import _ from 'lodash'\nimport getKeys from 'uas-get-my-keys'\n\nconst groupByProduct = (nodes, key) => {\n  const dirs = nodes.map(v => v.node.product)\n\n  let groups = {}\n\n  dirs.map((v, i) => {\n    if (!groups[v]) {\n      groups[v] = { [key]: [] }\n    }\n\n    groups[v] = {\n      [key]: [...(groups[v][key] || []), ...nodes[i]],\n    }\n\n    //groups[v].key = [...(groups[v] || []), ...nodes[i]]\n  })\n\n  return groups\n}\n\nconst makeProductSets = (edgesImg, edgesJson) => {\n  const imgs = groupByProduct(edgesImg, 'images')\n  const jsons = groupByProduct(edgesJson, 'labels')\n\n  let sets = {}\n  Object.keys(imgs).map(v => {\n    sets[v] = { ...imgs[v], ...jsons[v] }\n  })\n\n  return sets\n}\n\nexport const filterProducts = ({ filter, data, ...rest }) => {\n  // create filter criteria with defaults\n  const filterCriteria = {\n    value: 'men',\n    key: 'page',\n    ...filter,\n  }\n\n  // make sets of products from images and jsons found in graphql query\n  const sets = makeProductSets(data.imgs.edges, data.jsons.edges)\n\n  // make filter keys from sets\n  const filterProductSet = (set, key, value) => {\n    const filterResults = getKeys(set, key)[key]\n    const setKeys = Object.keys(set).map((v, i) => ({\n      value: filterResults[i],\n      key: v,\n    }))\n\n    const s = setKeys.filter(v => v.value === value)\n    let out = {}\n    s.map(v => (out[v.key] = set[v.key]))\n    return out\n  }\n\n  //console.log('[Gallery.helpers] filtering')\n  //console.log(filter)\n  const pageSet = filterProductSet(\n    sets,\n    filterCriteria.key,\n    filterCriteria.value\n  )\n\n  if (!filter.subFilter || !filter.subFilter.value) {\n    return pageSet\n  } else {\n    const categorySet = filterProductSet(\n      pageSet,\n      filterCriteria.subFilter.key,\n      filterCriteria.subFilter.value\n    )\n    //console.log('[Gallery.helpers] category set')\n    //console.log(categorySet)\n    return categorySet\n  }\n\n  const filterResults = getKeys(sets, filterCriteria.key)[filterCriteria.key]\n  const setKeys = Object.keys(sets).map((v, i) => ({\n    value: filterResults[i],\n    key: v,\n  }))\n\n  // return product sets filtered by filter value\n  const s = setKeys.filter(v => v.value === filter.value)\n  let out = {}\n  s.map(v => (out[v.key] = sets[v.key]))\n  return out\n}\n","import React, { useEffect, useState } from 'react'\nimport Img from 'gatsby-image'\n\n// styles\nimport styles from './index.module.css'\n\n// helpers\nimport { remap } from '../../../utils/helpers'\n\nconst Price = ({ price, left }) => (\n  <div className={left ? styles.priceLeft : styles.priceRight}>\n    <small>{price.slice(0, 2)}</small>\n    {price.slice(2)}\n  </div>\n)\n\nconst GalleryImage = ({ img }) => (\n  <div className={styles.img}>\n    <Img fluid={img.node.url.fluid} />\n  </div>\n)\n\nconst Descriptions = ({ desc, left }) => (\n  <div className={left ? styles.descriptionsLeft : styles.descriptionsRight}>\n    {desc}\n  </div>\n)\n\nconst BlockQuote = ({ txt, author }) => {\n  const randomQuotes = require('../../../_data/quotes/quotes.json').data\n  let quotes\n  let person\n\n  if (!txt && !author) {\n    const rIndex = parseInt(Math.random() * randomQuotes.length)\n    quotes = randomQuotes[rIndex].text\n    person = randomQuotes[rIndex].author\n  }\n\n  return (\n    <div>\n      <blockquote>\n        <p>“{quotes}”</p>\n      </blockquote>\n\n      <p>{person}</p>\n    </div>\n  )\n}\n\nlet leftIndex, rightIndex\nlet bustCount = 0\nlet descCount = 0\nlet sizeDescCount = 0\n\nconst Description = ({ txt, index }) => {\n  if (index === 0) {\n    bustCount = 0\n    descCount = 0\n    sizeDescCount = 0\n  }\n\n  if (txt.descriptions && descCount === 0) {\n    descCount++\n    return txt.descriptions\n  } else if (txt.sizes.description && sizeDescCount === 0) {\n    sizeDescCount++\n    return txt.sizes.description\n  } else if (txt.sizes.bust && bustCount === 0) {\n    bustCount++\n    return (\n      <span>\n        bust: {txt.sizes.bust}\n        <br />\n        waist: {txt.sizes.waist}\n        <br />\n        hip: {txt.sizes.hip}\n      </span>\n    )\n  } else {\n    return <BlockQuote />\n  }\n}\n\nconst LeftImageRightText = ({ img, txt, index }) => {\n  index === 0 ? (leftIndex = 0) : leftIndex++\n\n  return (\n    <div className={styles.left}>\n      <GalleryImage img={img} />\n      <Price price={txt.price} left />\n      <Descriptions left desc={<Description txt={txt} index={index} />} />\n    </div>\n  )\n}\n\nconst LeftTextRightImage = ({ img, txt, index }) => {\n  index === 0 ? (rightIndex = 0) : rightIndex++\n\n  return (\n    <div className={styles.right}>\n      <Descriptions desc={<Description txt={txt} index={index} />} />\n      <Price price={txt.price} />\n      <GalleryImage img={img} />\n    </div>\n  )\n}\n\nexport const StandardGallery = ({ images, labels, randomFlip }) => {\n  const [marginTop, setMarginTop] = useState('')\n  const [flip, setFlip] = useState(false)\n\n  // random spacing\n  const marginSets = [15, 30, 80]\n\n  // componentDidMount\n  useEffect(() => {\n    setMarginTop(marginSets[parseInt(Math.random() * marginSets.length)])\n    if (randomFlip) setFlip(parseInt(Math.random() + 0.2))\n  }, [])\n\n  const galleryOut = images.map((v, i) => {\n    // text is left or right\n    const left = i % 2 || i === 0 ? true : false\n\n    return (\n      <div\n        key={i}\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          margin:\n            flip && !left\n              ? `-${marginTop / 2}px auto 0`\n              : `${marginTop}px auto 0`,\n        }}\n      >\n        {left ? (\n          <LeftTextRightImage img={v} txt={labels} index={i} />\n        ) : (\n          <LeftImageRightText img={v} txt={labels} index={i} />\n        )}\n      </div>\n    )\n  })\n\n  const brand = labels.brand\n\n  return (\n    <div>\n      <h3 className={styles.brandTitle}>{brand || 'no-brand'}</h3>\n      <hr />\n      {galleryOut}\n    </div>\n  )\n}\n\nexport const StandardGallery2 = data => {}\n\nexport const SpecialHome = data => {}\n","import React, { Component } from 'react'\nimport { Link, graphql, StaticQuery } from 'gatsby'\nimport Img from 'gatsby-image'\nimport _ from 'lodash'\nimport ReactJson from 'react-json-tree'\n\nimport { filterProducts } from './helpers'\n\n// page types\nimport { StandardGallery } from './components'\n\n// themes\nconst googleTheme = {\n  scheme: 'google',\n  author: 'seth wright (http://sethawright.com)',\n  base00: '#1d1f21',\n  base01: '#282a2e',\n  base02: '#373b41',\n  base03: '#969896',\n  base04: '#b4b7b4',\n  base05: '#c5c8c6',\n  base06: '#e0e0e0',\n  base07: '#ffffff',\n  base08: '#CC342B',\n  base09: '#F96A38',\n  base0A: '#FBA922',\n  base0B: '#198844',\n  base0C: '#3971ED',\n  base0D: '#3971ED',\n  base0E: '#A36AC7',\n  base0F: '#3971ED',\n}\n\nconst displayProduct = data => {\n  return <p>hey</p>\n}\n\n/**\n *\n *\n * @param {*} { filter } accepts a filter of type object with a key search and the value to search for\n * @returns\n */\nconst Gallery = ({ filter }) => {\n  return (\n    <StaticQuery\n      query={ProductsQuery}\n      render={data => {\n        if (!filter) {\n          return (\n            <ul>\n              {Object.keys(data).map((k, i) => {\n                const list = data[k].edges\n\n                return [\n                  <li key={k}>\n                    <div\n                      style={{\n                        display: 'flex',\n                        flexDirection: 'column',\n                        marginBottom: 30,\n                      }}\n                    >\n                      <h2>{k}</h2>\n                    </div>\n                  </li>,\n                  <ol key={k + i}>\n                    {list.map((v, j) => {\n                      const d = v.node\n\n                      let out\n                      if (d.img) {\n                        // img\n                        out = <img width={125} src={d.img.src} />\n                      } else if (d.product) {\n                        // product-labelled json\n                        out = (\n                          <ReactJson\n                            data={d}\n                            theme={googleTheme}\n                          />\n                        )\n                      } else {\n                        // default is json\n                        out = (\n                          <ReactJson\n                            data={d}\n                            theme={googleTheme}\n                          />\n                        )\n                      }\n\n                      return (\n                        <li key={j}>\n                          <div\n                            style={{\n                              display: 'flex',\n                              flexDirection: 'column',\n                              marginBottom: 30,\n                            }}\n                          >\n                            {out}\n                          </div>\n                        </li>\n                      )\n                    })}\n                  </ol>,\n                ]\n              })}\n            </ul>\n          )\n        } else {\n          const prod = filterProducts({ filter, data })\n\n          // for all objects\n          return Object.keys(prod).map((group, i) => {\n            const imgs = prod[group].images\n            const lbls = prod[group].labels[0].node.jsonData.data\n\n            if (lbls.length > 1) {\n              throw 'there is more than one json file for the product. this is not allowed.'\n            }\n\n            return (\n              <StandardGallery key={i} images={imgs} labels={lbls} randomFlip />\n            )\n\n            // for every image, return a full div displaying image together with optional text\n          })\n        }\n      }}\n    />\n  )\n}\n\nexport default Gallery\n\nconst ProductsQuery = graphql`\n  {\n    # all json objects\n    jsons: allFile(\n      filter: {\n        sourceInstanceName: { eq: \"products\" }\n        extension: { eq: \"json\" }\n      }\n    ) {\n      edges {\n        node {\n          product: relativeDirectory\n          jsonData: childJson {\n            data {\n              page\n              brand\n              type\n              price\n              descriptions\n              tags\n              sizes {\n                bust\n                waist\n                hip\n                description\n              }\n            }\n          }\n          name\n          extension\n          relativePath\n          changeTime\n        }\n      }\n    }\n\n    # all image objects (need to be passed to GatsbyImageSharp)\n    imgs: allFile(\n      filter: {\n        sourceInstanceName: { eq: \"products\" }\n        extension: { in: [\"png\", \"jpg\", \"jpeg\"] }\n      }\n    ) {\n      edges {\n        node {\n          product: relativeDirectory\n          name\n          extension\n          relativePath\n          changeTime\n          url: childImageSharp {\n            fluid(maxWidth: 600) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n    # all images as a gallery\n    imgs_gallery: allImageSharp {\n      edges {\n        node {\n          ... on ImageSharp {\n            img: resize(width: 250) {\n              src\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"brandTitle\":\"index-module--brandTitle--3fenE\",\"price\":\"index-module--price--35kg7\",\"priceLeft\":\"index-module--priceLeft--19eRo index-module--price--35kg7\",\"priceRight\":\"index-module--priceRight--2inT0 index-module--price--35kg7\",\"descriptions\":\"index-module--descriptions--5Ao-y\",\"descriptionsLeft\":\"index-module--descriptionsLeft--1N3nC index-module--descriptions--5Ao-y\",\"descriptionsRight\":\"index-module--descriptionsRight--2-iZp index-module--descriptions--5Ao-y\",\"imgBlock\":\"index-module--imgBlock--iJ_hR\",\"left\":\"index-module--left--sLMvz index-module--imgBlock--iJ_hR\",\"right\":\"index-module--right--3CVZ6 index-module--imgBlock--iJ_hR\",\"img\":\"index-module--img--3mlzE\"};"],"sourceRoot":""}